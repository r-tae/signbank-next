version: v1.0
name: Build
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  env_vars:
    - name: PRIVATE_REG
      value: registry.digitalocean.com
    - name: PUBLIC_REG
      value: docker.io
    - name: API_IMAGE_NAME
      value: signbank/signbank-api
    - name: UI_IMAGE_NAME
      value: signbank/signbank-next
blocks:
  - name: Build
    task:
      jobs:
        - name: UI
          commands:
            - cd ui
            - 'docker build . -t $UI_IMAGE_NAME:$SEMAPHORE_GIT_SHA'
        - name: API
          commands:
            - cd api
            - 'docker build . -t $API_IMAGE_NAME:$SEMAPHORE_GIT_SHA'
      prologue:
        commands:
          - checkout
      epilogue:
        on_pass:
          commands:
            - cache store
    dependencies: []
  - name: Test
    task:
      jobs:
        - name: API+UI
          commands:
            - 'echo "TODO: run the images locally with a minimal config"'
      prologue:
        commands:
          - cache restore
    dependencies:
      - Build
  - name: Push to private registry
    task:
      jobs:
        - name: Push
          commands:
            - 'docker push $PRIVATE_REG/$IMAGE:$SEMAPHORE_GIT_TAG_NAME'
          matrix:
            - env_var: IMAGE
              values:
                - signbank/signbank-next
                - signbank/signbank-api
      secrets:
        - name: DigitalOcean registry credentials
      prologue:
        commands:
          - docker login $PRIVATE_REG
          - cache restore
    dependencies:
      - Tag
      - Test
    skip:
      when: tag !~ '^v'
  - name: Tag
    dependencies:
      - Build
    skip:
      when: tag !~ '^v'
    task:
      jobs:
        - name: Tag
          commands:
            - 'docker tag $IMAGE:$SEMAPHORE_GIT_SHA $PRIVATE_REG/$IMAGE:$SEMAPHORE_GIT_TAG_NAME'
          matrix:
            - env_var: IMAGE
              values:
                - signbank/signbank-next
                - signbank/signbank-api
      prologue:
        commands:
          - cache restore
      epilogue:
        on_pass:
          commands:
            - cache store
promotions:
  - name: Promote images to Docker Hub
    pipeline_file: deploy.yml
