# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

defaults: &defaults
  working_directory: ~/project
  machine:
    image: ubuntu-2204:2022.04.1
    docker_layer_caching: true # NOTE: doesn't seem to do anything, follow up if you have time
  resource_class: medium

orbs:
  node: circleci/node@5.0.2

# TODO: add steps for deployment (basically just pushing the image to docker hub) etc
# TODO: end goal is for PRs into master to have testing done on them, and to run a test before making a release (main->release branch merge basically)
# NOTE: we want to run integration tests on the same image that is fit for production, should revisit and make sure of this
jobs:
  # TODO: build and test in a single step for daily use, as it is quite a bit faster
  # build_and_test:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - run:
  #         name: Build

  # TODO: set image tagging up properly, avoid `latest`, use semver
  build_prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build application image
          # NOTE: everything else will be build during test
          command: "docker compose
                      --project-name signbank
                      -f docker-compose.yml -f docker-compose.prod.yml
                      build web"
      - run:
          name: Save application image to archive
          command: docker save signbank_web > signbank_web.tar
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  test_prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Load application image from archive
          command: docker load -i signbank_web.tar
      - run:
          name: Run tests
          command: "docker compose
                      --project-name signbank
                      --profile test
                      up --exit-code-from cypress"
      - store_test_results:
          path: cypress/results

  # TODO: remove this, it is useless now that we have the docker compose flow working
  build:
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: yarn install --production=false --frozen-lockfile
      - run:
          name: Next build
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .cache

  # TODO: cypress can take care of unit tests too, remove this and configure that
  unit_tests:
    executor: node/default
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run unit tests
          command: yarn test

  # TODO: finish setting up browserstack cypress tests
  # NOTE: until then, we will just have local cypress tests
  integration_tests:
    executor: node/default
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Download browserstack local binary
          command: wget "https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip"
      - run:
          name: Unzip browserstack local binary
          command: unzip BrowserStackLocal-linux-x64.zip
      - run:
          name: Run browserstack local binary
          command: ./BrowserStackLocal $BROWSERSTACK_ACCESS_KEY
          background: true
      - run:
          name: Run integration tests
          command: yarn cypress:ci

workflows:
  integration_tests:
    jobs:
      - build_prod
      - test_prod:
          requires:
            - build_prod

