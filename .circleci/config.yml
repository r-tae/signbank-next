# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@5.0.2
  cypress: cypress-io/cypress@1

# TODO: add steps for deployment (basically just pushing the image to docker hub) etc
# TODO: end goal is for PRs into master to have testing done on them, and to run a test before making a release (main->release branch merge basically)
# NOTE: we want to run integration tests on the same image that is fit for production, should revisit and make sure of this
jobs:
  docker_compose_build:
    machine:
      image: ubuntu-2204:2022.04.1
      docker_layer_caching: true # TODO: change to true, see if it helps at all (it may be a paid feature)
    resource_class: medium
    working_directory: ~/project
    steps:
      - checkout
      - run: docker compose --project-name signbank build web # NOTE: we shouldn't need to build anything else, they can be built during the test job
      - run: mkdir ~/docker
      - run: docker save signbank_web > ~/docker/signbank_web.tar
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - docker

  docker_compose_test:
    machine:
      image: ubuntu-2204:2022.04.1
      docker_layer_caching: true # TODO: change to true, see if it helps at all (it may be a paid feature)
    resource_class: medium
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: docker load -i ~/docker/signbank_web.tar
      - run: docker compose -p signbank --profile test up --exit-code-from cypress

  # TODO: remove this, it is useless now that we have the docker compose flow working
  build:
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: yarn install --production=false --frozen-lockfile
      - run:
          name: Next build
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .cache

  # TODO: cypress can take care of unit tests too, remove this and configure that
  unit_tests:
    executor: node/default
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run unit tests
          command: yarn test

  # TODO: finish setting up browserstack cypress tests
  # NOTE: until then, we will just have local cypress tests
  integration_tests:
    executor: node/default
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Download browserstack local binary
          command: wget "https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip"
      - run:
          name: Unzip browserstack local binary
          command: unzip BrowserStackLocal-linux-x64.zip
      - run:
          name: Run browserstack local binary
          command: ./BrowserStackLocal $BROWSERSTACK_ACCESS_KEY
          background: true
      - run:
          name: Run integration tests
          command: yarn cypress:ci

workflows:
  integration_tests:
    jobs:
      - docker_compose_build
      - docker_compose_test:
          requires:
            - docker_compose_build

